/// Gradle Build script for 18xx Rails program (rails.sf.net)

import java.text.SimpleDateFormat
import org.gradle.internal.os.OperatingSystem;

plugins {
    id 'java'
    // https://github.com/johnrengelman/shadow
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    // plugin to check for dependency updates via task dependencyUpdates
    // https://github.com/ben-manes/gradle-versions-plugin
    id 'com.github.ben-manes.versions' version '0.28.0'
    // https://github.com/n0mer/gradle-git-properties
    id 'com.gorylenko.gradle-git-properties' version '2.2.2'
    // https://openjfx.io/openjfx-docs/#gradle
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'jacoco'
    id 'org.sonarqube' version '2.8'
}

repositories {
    mavenLocal()
    mavenCentral()
}

// Rails variables
version = '2.2-beta'
description = 'Rails is a moderator program for 18xx games'

def appName = 'rails-18xx'
def vendor = 'The Rails project team'
def licenceFile = "./LICENSE"

def jpackage() {
    if (OperatingSystem.current().isWindows())
        return "${System.getenv('JAVA_HOME')}/bin/jpackage.exe"
    else if (OperatingSystem.current().isLinux())
        return "${System.getenv('JAVA_HOME')}/bin/jpackage"
    else if (OperatingSystem.current().isMacOsX())
        return "${System.getenv('JAVA_HOME')}/bin/jpackage"
    else
        throw new GradleException("Unknown operating system: ${OperatingSystem.current()}")
}

dependencies {
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.github.vlsi.mxgraph:jgraphx:4.1.0'
    implementation 'org.jgrapht:jgrapht-core:1.4.0'
    implementation 'org.jgrapht:jgrapht-ext:1.4.0'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.apache.xmlgraphics:batik-bridge:1.12'
    implementation 'org.apache.xmlgraphics:batik-transcoder:1.12'
    implementation 'org.apache.xmlgraphics:batik-svggen:1.12'
    implementation 'org.apache.xmlgraphics:batik-ext:1.12'
    implementation 'org.apache.xmlgraphics:batik-swing:1.12'
    implementation 'javazoom:jlayer:1.0.1'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.google.guava:guava:23.0'
    implementation 'net.java.dev.designgridlayout:designgridlayout:1.11'
    implementation 'org.dockingframes:docking-frames-common:1.1.1'
    implementation 'com.googlecode.combinatoricslib:combinatoricslib:2.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.12'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.commons:commons-text:1.8'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.easytesting:fest-assert-core:2.0M10'
    testImplementation 'org.easytesting:fest-util:1.2.5'
    testImplementation 'org.mockito:mockito-core:3.3.3'
}

javafx {
    version = '14'
    modules = ['javafx.controls']
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

assemble.dependsOn(shadowJar)
jar {
    manifest {
        attributes(
                'Main-Class': "net.sf.rails.util.RunGame"
        )
    }
}

test {
    // the expected test files have UTF-8 encoding
    systemProperty 'file.encoding', 'UTF-8'

    // TestGame is not intended as a standalone test class
    exclude 'net/sf/rails/test/TestGame.class'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
plugins.withType(JacocoPlugin) {
    tasks['test'].finalizedBy 'jacocoTestReport'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

// BuildDate function adapted from http://stackoverflow.com/questions/19172565/how-append-date-build-to-versionnamesuffix-on-gradle
def buildDate() {
    def df = new SimpleDateFormat('yyyy-MM-dd')

    df.setTimeZone(TimeZone.getTimeZone('UTC'))

    return df.format(new Date())
}

gitProperties {
    customProperty 'buildDate', buildDate()
    customProperty 'develop', 'true'
}

def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/

    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    gradleReleaseChannel = 'current'
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

def appVersion() {
    return rootProject.version
            .replaceAll("\\-", ".")
            .replaceAll("alpha", "0")
            .replaceAll("beta", "0")
            .replaceAll("release", "0")
}

task buildDebPackage(type: Exec) {
    commandLine jpackage(),
            '--verbose',
            '--type', 'deb',
            '--name', appName,
            '--description', rootProject.description,
            '--vendor', vendor,
            '--license-file', licenceFile,
            '--icon', './native/rails.png',
            '--file-associations', './native/rails-linux-association.properties',
            '--app-version', appVersion(),
            '--input', 'build/libs',
            '--main-jar', shadowJar.archiveName,
            '--linux-package-name', 'rails-18xx',
            '--linux-app-category', 'games',
            '--linux-shortcut'
}

task buildRpmPackage(type: Exec) {
    commandLine jpackage(),
            '--verbose',
            '--type', 'rpm',
            '--name', appName,
            '--description', rootProject.description,
            '--vendor', vendor,
            '--license-file', licenceFile,
            '--icon', './native/rails.png',
            '--file-associations', './native/rails-linux-association.properties',
            '--app-version', appVersion(),
            '--input', 'build/libs',
            '--main-jar', shadowJar.archiveName,
            '--linux-package-name', 'rails-18xx',
            '--linux-app-category', 'games',
            '--linux-shortcut'
}

task buildExePackage(type: Exec) {
    commandLine jpackage(),
            '--verbose',
            '--type', 'exe',
            '--name', appName,
            '--description', rootProject.description,
            '--vendor', vendor,
            '--license-file', licenceFile,
            '--icon', './native/rails.ico',
            '--file-associations', './native/rails-windows-association.properties',
            '--app-version', appVersion(),
            '--input', 'build/libs',
            '--main-jar', shadowJar.archiveName,
            '--win-dir-chooser',
            '--win-per-user-install',
            '--win-menu',
            '--win-shortcut'
}

task buildDmgPackage(type: Exec) {
    commandLine jpackage(),
            '--verbose',
            '--type', 'dmg',
            '--name', appName,
            '--description', rootProject.description,
            '--vendor', vendor,
            '--license-file', licenceFile,
            '--icon', './native/rails.ico',
            '--file-associations', './native/rails-osx-association.properties',
            '--app-version', appVersion(),
            '--input', 'build/libs',
            '--main-jar', shadowJar.archiveName,
            '--mac-package-name', 'rails-18xx'
}

task renameExecutables(type: Copy) {
    from('.') {
        include '*.deb'
        include '*.rpm'
        include '*.exe'
        include '*.dmg'
    }
    into '.'
    rename '(.+)\\.(.+)', 'rails-18xx.$2'
}
