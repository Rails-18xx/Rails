/// Gradle Build script for 18xx Rails program (rails.sf.net)

import java.text.SimpleDateFormat
import org.gradle.internal.os.OperatingSystem;

plugins {
    id 'java'
    // https://github.com/johnrengelman/shadow
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    // plugin to check for dependency updates via task dependencyUpdates
    // https://github.com/ben-manes/gradle-versions-plugin
    id 'com.github.ben-manes.versions' version '0.39.0'
    // https://github.com/n0mer/gradle-git-properties
    id 'com.gorylenko.gradle-git-properties' version '2.3.1'
    // https://openjfx.io/openjfx-docs/#gradle
    id 'org.openjfx.javafxplugin' version '0.0.9'
    // https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-gradle/
    id 'org.sonarqube' version '3.2.0'
    // used by SonarQube for code coverage
    id 'jacoco'
}

repositories {
    mavenCentral()
}

// Rails variables
description = 'Rails is a moderator program for 18xx games'

def appName = 'Rails-18xx'
def vendor = 'The Rails project team'
def licenceFile = "./LICENSE"

def input = './build/libs'
def output = './build/installers'

def jpackage() {
    def jpackageExe
    if (OperatingSystem.current().isWindows()) {
        jpackageExe = "${System.getenv('JAVA_HOME')}/bin/jpackage.exe"
    } else if (OperatingSystem.current().isLinux()) {
        jpackageExe = "${System.getenv('JAVA_HOME')}/bin/jpackage"
    } else if (OperatingSystem.current().isMacOsX()) {
        jpackageExe = "${System.getenv('JAVA_HOME')}/bin/jpackage"
    } else {
        throw new StopActionException("Unknown operating system: ${OperatingSystem.current()}")
    }

    if ( ! new File(jpackageExe).exists() ) {
        throw new StopActionException('jpackage not found (JDK 14+) needed to package')
    }
    jpackageExe
}

dependencies {
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'com.github.vlsi.mxgraph:jgraphx:4.2.2'
    implementation 'org.jgrapht:jgrapht-core:1.5.1'
    implementation 'org.jgrapht:jgrapht-ext:1.5.1'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.apache.xmlgraphics:batik-bridge:1.14'
    implementation 'org.apache.xmlgraphics:batik-transcoder:1.14'
    implementation 'org.apache.xmlgraphics:batik-svggen:1.14'
    implementation 'org.apache.xmlgraphics:batik-ext:1.14'
    implementation 'org.apache.xmlgraphics:batik-swing:1.14'
    implementation 'javazoom:jlayer:1.0.1'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.google.guava:guava:23.0'
    implementation 'net.java.dev.designgridlayout:designgridlayout:1.11'
    implementation 'org.dockingframes:docking-frames-common:1.1.1'
    implementation 'com.googlecode.combinatoricslib:combinatoricslib:2.3'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.9'
    // https://www.jetbrains.com/help/idea/annotating-source-code.html
    implementation 'org.jetbrains:annotations:20.1.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.easytesting:fest-assert-core:2.0M10'
    testImplementation 'org.easytesting:fest-util:1.2.5'
    testImplementation 'org.mockito:mockito-core:3.9.0'
}

javafx {
    version = '15'
    modules = ['javafx.controls', 'javafx.swing']
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

assemble.dependsOn(shadowJar)
jar {
    manifest {
        attributes(
                'Main-Class': 'net.sf.rails.util.RunGame'
        )
    }
}

test {
    // the expected test files have UTF-8 encoding
    systemProperty 'file.encoding', 'UTF-8'

    // TestGame is not intended as a standalone test class
    exclude 'net/sf/rails/test/TestGame.class'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
plugins.withType(JacocoPlugin) {
    tasks['test'].finalizedBy 'jacocoTestReport'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

// BuildDate function adapted from http://stackoverflow.com/questions/19172565/how-append-date-build-to-versionnamesuffix-on-gradle
static def buildDate() {
    new SimpleDateFormat('yyyy-MM-dd').format(new Date())
}

static def isNonStable(String version) {
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/

    !stableKeyword && !(version ==~ regex)
}

gitProperties {
    customProperty 'buildDate', buildDate()
    customProperty 'develop', isNonStable(rootProject.version as String)
}

dependencyUpdates {
    gradleReleaseChannel = 'current'
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

/**
 * Converts the version to a jpackage conform form.
 * Examples:
 * 2.4.0         -> 2.4.0
 * 2.4.0-alpha   -> 2.4.0
 * 2.4.0-release -> 2.4.0
 *
 * @return The converted version string
 */
def appVersion() {
    rootProject.version
            .toUpperCase()
            .replaceAll('\\-ALPHA', '')
            .replaceAll('\\-BETA', '')
            .replaceAll('\\-RELEASE', '')
            .replaceAll('\\-FINAL', '')
            .replaceAll('\\-GA', '')
}

task buildDebPackage(type: Exec) {
    doFirst {
        commandLine jpackage(),
                '--verbose',
                '--type', 'deb',
                '--name', appName,
                '--description', rootProject.description,
                '--vendor', vendor,
                '--license-file', licenceFile,
                '--icon', './src/main/resources/images/icon/rails.png',
                '--file-associations', './src/main/resources/build/rails-linux-association.properties',
                '--app-version', appVersion(),
                '--input', input,
                '--dest', output,
                '--main-jar', shadowJar.archiveName,
                '--linux-package-name', 'rails-18xx',
                '--linux-app-category', 'games',
                '--linux-shortcut'
    }
}

task buildRpmPackage(type: Exec) {
    doFirst {
        commandLine jpackage(),
                '--verbose',
                '--type', 'rpm',
                '--name', appName,
                '--description', rootProject.description,
                '--vendor', vendor,
                '--license-file', licenceFile,
                '--icon', './src/main/resources/images/icon/rails.png',
                '--file-associations', './src/main/resources/build/rails-linux-association.properties',
                '--app-version', appVersion(),
                '--input', input,
                '--dest', output,
                '--main-jar', shadowJar.archiveName,
                '--linux-package-name', 'rails-18xx',
                '--linux-app-category', 'games',
                '--linux-shortcut'
    }
}

task buildExePackage(type: Exec) {
    doFirst {
        commandLine jpackage(),
                '--verbose',
                '--type', 'exe',
                '--name', appName,
                '--description', rootProject.description,
                '--vendor', vendor,
                '--license-file', licenceFile,
                '--icon', './src/main/resources/images/icon/rails.ico',
                '--file-associations', './src/main/resources/build/rails-windows-association.properties',
                '--app-version', appVersion(),
                '--input', input,
                '--dest', output,
                '--main-jar', shadowJar.archiveName,
                '--win-dir-chooser',
                '--win-per-user-install',
                '--win-menu',
                '--win-shortcut'
    }
}

task buildDmgPackage(type: Exec) {
    doFirst {
        commandLine jpackage(),
                '--verbose',
                '--type', 'dmg',
                '--name', appName,
                '--description', rootProject.description,
                '--vendor', vendor,
                '--license-file', licenceFile,
                '--icon', './src/main/resources/images/icon/rails.icns',
                '--file-associations', './src/main/resources/build/rails-osx-association.properties',
                '--file-associations', './src/main/resources/build/last_rails-osx-association.properties',
                '--app-version', appVersion(),
                '--input', input,
                '--dest', output,
                '--main-jar', shadowJar.archiveName,
                '--mac-package-name', 'Rails-18xx'
    }
}

task renameExecutables(type: Copy) {
    from(output) {
        include '*.deb'
        include '*.rpm'
        include '*.exe'
        include '*.dmg'
    }
    into '.'
    rename '(.+)\\.(.+)', 'rails-18xx.$2'
}
