name: Create Releases with Gradle

on:
  push:
    tags: releases/*

jobs:
  jdk11:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
      - name: Execute Tests
        run: ./gradlew clean test

  ubuntu:
    name: Build Ubuntu Installer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 14
          java-package: jdk
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/releases\//}
      - name: Execute Tests
        run: ./gradlew clean test
      - name: Build jar
        run: ./gradlew clean build
      - name: Create Deb Installer
        run: ./gradlew -Pversion=${{ steps.get_version.outputs.VERSION }} buildDebPackage
      - name: Create Rpm Installer
        run: ./gradlew -Pversion=${{ steps.get_version.outputs.VERSION }} buildRpmPackage
      - name: Rename Installers
        run: ./gradlew renameExecutables
      - name: Upload Deb Installer
        uses: actions/upload-artifact@v1
        with:
          name: deb
          path: rails-18xx.deb
      - name: Upload Rpm Installer
        uses: actions/upload-artifact@v1
        with:
          name: rpm
          path: rails-18xx.rpm

  windows:
    name: Build Windows Installers
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 14
          java-package: jdk
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/releases\//}
      - name: Execute Tests
        run: ./gradlew clean test
      - name: Build jar
        run: ./gradlew clean build
      - name: Create Exe Installer
        run: ./gradlew -Pversion=${{ steps.get_version.outputs.VERSION }} buildExePackage
      - name: Rename Installer
        run: ./gradlew renameExecutables
      - name: Upload Installer
        uses: actions/upload-artifact@v1
        with:
          name: exe
          path: rails-18xx.exe

  macos:
    name: Build MacOS Installers
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 14
          java-package: jdk
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/releases\//}
      - name: Execute Tests
        run: ./gradlew clean test
      - name: Build jar
        run: ./gradlew clean build
      - name: Create Dmg Installer
        run: ./gradlew -Pversion=${{ steps.get_version.outputs.VERSION }} buildDmgPackage
      - name: Rename Installer
        run: ./gradlew renameExecutables
      - name: Upload Installer
        uses: actions/upload-artifact@v1
        with:
          name: dmg
          path: rails-18xx.dmg

  publish:
    name: Publish Installers
    needs: [windows, ubuntu, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/releases\//}
      - name: Download exe
        uses: actions/download-artifact@v1
        with:
          name: exe
      - name: Download deb
        uses: actions/download-artifact@v1
        with:
          name: deb
      - name: Download rpm
        uses: actions/download-artifact@v1
        with:
          name: rpm
      - name: Download dmg
        uses: actions/download-artifact@v1
        with:
          name: dmg
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: releases/${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: |
            Rails-18xx version ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: true
      - name: Upload exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./exe/rails-18xx.exe
          asset_name: rails-18xx.exe
          asset_content_type: application/octet-stream
      - name: Upload deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./deb/rails-18xx.deb
          asset_name: rails-18xx.deb
          asset_content_type: application/octet-stream
      - name: Upload rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rpm/rails-18xx.rpm
          asset_name: rails-18xx.rpm
          asset_content_type: application/octet-stream
      - name: Upload dmg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dmg/rails-18xx.dmg
          asset_name: rails-18xx.dmg
          asset_content_type: application/octet-stream
